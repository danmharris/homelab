---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nas-photos
  namespace: default
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 1Gi
  volumeName: nas-photos
  storageClassName: nfs-csi

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: photos-web
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: photos-web
  template:
    metadata:
      labels:
        app: photos-web
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: photos-web
          image: 'filebrowser/filebrowser:v2.30.0'
          imagePullPolicy: IfNotPresent
          env:
            - name: FB_PORT
              value: '8080'
            - name: FB_DATABASE
              value: '/database/filebrowser.db'
            - name: FB_NOAUTH
              value: 'true'
            - name: FB_ROOT
              value: '/srv'
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: db
              mountPath: /database
            - name: photos
              mountPath: /srv
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: photos-web
        - name: photos
          persistentVolumeClaim:
            claimName: nas-photos

---
kind: Service
apiVersion: v1
metadata:
  name: photos-web
  namespace: default
spec:
  selector:
    app: photos-web
  ports:
    - name: http
      port: 80
      targetPort: http

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: photos-web
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/auth-url: |-
        http://authentik-server.default.svc.cluster.local/outpost.goauthentik.io/auth/nginx
    nginx.ingress.kubernetes.io/auth-signin: |-
        https://photos.cluster.dnhrrs.xyz/outpost.goauthentik.io/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
spec:
  ingressClassName: nginx
  rules:
    - host: photos.cluster.dnhrrs.xyz
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: photos-web
                port:
                  name: http
          - path: /outpost.goauthentik.io
            pathType: Prefix
            backend:
              service:
                name: authentik-server
                port:
                  number: 80
  tls:
    - secretName: photos-web-cert
      hosts:
        - photos.cluster.dnhrrs.xyz
