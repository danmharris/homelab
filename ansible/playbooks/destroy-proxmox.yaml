---
- hosts: all
  gather_facts: false
  vars_prompt:
    - name: remove_host
      prompt: Specify host to remove
      private: false
  tasks:
    - name: Add host to group
      add_host:
        hostname: "{{ remove_host }}"
        groups:
          - remove_hosts
      changed_when: false

- hosts: remove_hosts
  gather_facts: false
  become: false
  serial: 1
  tasks:
    - name: Generate name
      delegate_to: localhost
      set_fact:
        proxmox_name: "{{ proxmox_role }}-{{ inventory_hostname | replace('.', '-') }}"

    - name: Stop Proxmox VM
      delegate_to: localhost
      proxmox_kvm:
        api_user: "{{ proxmox_api['user'] }}"
        api_token_id: "{{ proxmox_api['token_id'] }}"
        api_token_secret: "{{ proxmox_api['token_secret'] }}"
        api_host: "{{ proxmox_api['host'] }}"
        name: "{{ proxmox_name }}"
        node: "{{ proxmox_node }}"
        state: stopped
        force: true
      register: vm_stopped
      ignore_errors: true

    - name: Wait for VM to stop
      delegate_to: localhost
      wait_for:
        timeout: 10
      when: vm_stopped is changed

    - name: Destroy Proxmox VM
      delegate_to: localhost
      proxmox_kvm:
        api_user: "{{ proxmox_api['user'] }}"
        api_token_id: "{{ proxmox_api['token_id'] }}"
        api_token_secret: "{{ proxmox_api['token_secret'] }}"
        api_host: "{{ proxmox_api['host'] }}"
        name: "{{ proxmox_name }}"
        node: "{{ proxmox_node }}"
        state: absent
      when: vm_stopped is not failed

    - name: Delete A record
      command:
        argv:
          - pdnsutil
          - delete-rrset
          - dnhrrs.xyz
          - "{{ proxmox_name }}.{{ dns_zone }}"
          - A
      delegate_to: "{{ groups['dns_authoritative'] | first }}"
      become: true

    - name: Delete PTR record
      command:
        argv:
          - pdnsutil
          - delete-rrset
          - dnhrrs.xyz
          - "{{ (inventory_hostname.split('.') | reverse)[:2] | join('.') }}"
          - PTR
      delegate_to: "{{ groups['dns_authoritative'] | first }}"
      become: true
